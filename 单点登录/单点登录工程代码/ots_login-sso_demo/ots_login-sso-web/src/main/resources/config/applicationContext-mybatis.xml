<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/context
     			http://www.springframework.org/schema/context/spring-context-3.0.xsd
     			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
     			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

<!-- 	<bean id="parentDataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
<!-- 		destroy-method="close"> -->
<!-- 		<property name="driverClassName" value="${mysql.driverClassName}" /> -->
		<!-- 初始化连接大小 -->
<!-- 		<property name="initialSize" value="${mysql.initialSize}"></property> -->
		<!-- 连接池最大数量 -->
<!-- 		<property name="maxActive" value="${mysql.maxActive}"></property> -->
		<!-- 连接池最大空闲 -->
<!-- 		<property name="maxIdle" value="${mysql.maxIdle}"></property> -->
		<!-- 连接池最小空闲 -->
<!-- 		<property name="minIdle" value="${mysql.minIdle}"></property> -->
		<!-- 获取连接最大等待时间 -->
<!-- 		<property name="maxWait" value="${mysql.maxWait}"></property> -->
<!-- 		<property name="url" value="${master.jdbc.url}" />   -->
<!--         <property name="username" value="${master.jdbc.username}" />   -->
<!--         <property name="password" value="${master.jdbc.password}" />   -->
<!-- 	</bean> -->
	
 	<bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
 		<property name="driverClass" value="${mysql.driverClassName}" /> 
<!-- 	  	连接池中保留的最大连接数。默认值: 15    -->
          <property name="maxPoolSize" value="60"/>   
<!--          连接池中保留的最小连接数，默认为：3   -->
          <property name="minPoolSize" value="3"/>   
<!--          初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3   -->
          <property name="initialPoolSize" value="3"/>   
<!--          最大空闲时间，10秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
          <property name="maxIdleTime" value="10"/> 
<!--          当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0    -->
          <property name="checkoutTimeout" value="20000"/>   
 	</bean> 


	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:config/MyBatis-Configuration.xml" />
		<!-- 自动扫描mapping.xml文件 -->
 		<property name="mapperLocations" value="classpath:dbmappers/*.xml"></property> 
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	
    <bean id="masterDataSource" parent="parentDataSource">  
        <property name="jdbcUrl" value="${master.jdbc.url}" />  
        <property name="user" value="${master.jdbc.username}" />  
        <property name="password" value="${master.jdbc.password}" />  
    </bean> 
    <!-- 从数据源-->  
    <bean id="slaveDataSource" parent="parentDataSource">  
        <property name="jdbcUrl" value="${slave.jdbc.url}" />  
        <property name="user" value="${slave.jdbc.username}" />  
        <property name="password" value="${slave.jdbc.password}" />  
    </bean>  
    
	<bean id="dataSource" class="com.cmri.ots.sso.biz.DynamicDataSource">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry key="slave" value-ref="slaveDataSource" />  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="masterDataSource" />  
    </bean> 
    <!-- 切换数据源 -->  
    <bean id="dataSourceAdvice" class="com.cmri.ots.sso.biz.DataSourceAdvice" />  
    <aop:config>  
        <aop:advisor  
            pointcut="execution(* com.cmri..dao..*(..))"  
            advice-ref="dataSourceAdvice" />  
    </aop:config> 
	
	
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cmri" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	-->

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvicedrug" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="userServiceOperation1"
			expression="execution(* com.lm.*.service..*Service.*(..)))" />
		<aop:pointcut id="userServiceOperation2"
			expression="execution(* com.lm.*.*.service..*Service.*(..)))" />
	</aop:config>
</beans>