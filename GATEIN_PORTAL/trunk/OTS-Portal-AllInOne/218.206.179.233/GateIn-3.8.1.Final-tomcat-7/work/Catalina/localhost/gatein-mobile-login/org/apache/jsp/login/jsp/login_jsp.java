/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.42
 * Generated at: 2016-12-13 09:01:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.login.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLEncoder;
import javax.servlet.http.Cookie;
import org.exoplatform.container.PortalContainer;
import org.exoplatform.services.resources.ResourceBundleService;
import org.gatein.security.oauth.spi.OAuthProviderType;
import org.gatein.security.oauth.spi.OAuthProviderTypeRegistry;
import java.util.ResourceBundle;
import org.gatein.common.text.EntityEncoder;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

  String contextPath = request.getContextPath() ;

  String username = request.getParameter("username");
  if(username == null) {
    username = "";
  } else {
    EntityEncoder encoder = EntityEncoder.FULL;
    username = encoder.encode(username);
  }

  PortalContainer portalContainer = PortalContainer.getCurrentInstance(session.getServletContext());
  ResourceBundleService service = (ResourceBundleService) portalContainer.getComponentInstanceOfType(ResourceBundleService.class);
  ResourceBundle res = service.getResourceBundle(service.getSharedResourceBundleNames(), request.getLocale()) ;
  
  OAuthProviderTypeRegistry registry = (OAuthProviderTypeRegistry) portalContainer.getComponentInstanceOfType(OAuthProviderTypeRegistry.class);

  Cookie cookie = new Cookie(org.exoplatform.web.login.LoginServlet.COOKIE_NAME, "");
    cookie.setPath(request.getContextPath());
    cookie.setMaxAge(0);
    response.addCookie(cookie);

  //
  String uri = (String)request.getAttribute("org.gatein.portal.login.initial_uri");
  boolean error = request.getAttribute("org.gatein.portal.login.error") != null;
  String disabledUser = (String)request.getAttribute(org.exoplatform.web.login.FilterDisabledLoginModule.DISABLED_USER_NAME);
  
  response.setCharacterEncoding("UTF-8"); 
  response.setContentType("text/html; charset=UTF-8");

      out.write("\n");
      out.write("<!DOCTYPE html \n");
      out.write("    PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n");
      out.write("    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n");
      out.write("\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\n");
      out.write("    <head>\n");
      out.write("        <title>");
      out.print(res.getString("UILoginForm.label.Signin"));
      out.write("</title>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>        \n");
      out.write("        <meta name=\"description\" content=\"Login screen of the Portal\"/>\n");
      out.write("        <meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=1\"/>\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"/gatein-mobile-login/login/css/default.css\"/>\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"/gatein-mobile-login/login/css/enchanced.css\"/>        \n");
      out.write("        <!--[if lte IE 8]>\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"/gatein-mobile-login/login/css/ie8.css\"/>\n");
      out.write("        <![endif]-->\n");
      out.write("        <script type=\"text/javascript\" src=\"/gatein-mobile-login/login/js/login.js\"></script>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <h1><a href=\"#login-form\" title=\"Gate In\">");
      out.print(res.getString("UILoginForm.label.mobile.Login"));
      out.write("</a></h1>\n");
      out.write("        ");
/*Begin form*/
      out.write("\n");
      out.write("        ");
 if (error) {
      out.write("\n");
      out.write("        <div id=\"error-pane\"><p>\n");
      out.write("        ");
    if (disabledUser != null) {
      out.write("\n");
      out.write("        <span>");
      out.print(disabledUser);
      out.write(' ');
      out.print(res.getString("UILoginForm.label.DisabledUserSignin"));
      out.write("</span>\n");
      out.write("        ");
	 } else {
      out.write("\n");
      out.write("        <span>");
      out.print(res.getString("UILoginForm.label.SigninFail"));
      out.write("</span>\n");
      out.write("        ");
   }
      out.write("\n");
      out.write("        <button id=\"button-close-alert\" type=\"button\">");
      out.print(res.getString("UILoginForm.label.mobile.login.Close"));
      out.write("</button></p></div>\n");
      out.write("        ");
 }
      out.write("\n");
      out.write("        <form id=\"login-form\" action=\"");
      out.print( contextPath + "/login");
      out.write("\" method=\"post\">\n");
      out.write("            <fieldset>\n");
      out.write("                <legend>");
      out.print(res.getString("UILoginForm.label.Signin"));
      out.write("</legend>\n");
      out.write("                <label for=\"username\">");
      out.print(res.getString("UILoginForm.label.UserName"));
      out.write("</label>\n");
      out.write("                <input type=\"text\" id=\"username\" name=\"username\" value=\"\"/>\n");
      out.write("\n");
      out.write("                <label for=\"password\">");
      out.print(res.getString("UILoginForm.label.password"));
      out.write("</label>\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\" value=\"\"/>\n");
      out.write("\n");
      out.write("                <label for=\"rememberme\">");
      out.print(res.getString("UILoginForm.label.RememberOnComputer"));
      out.write("</label>\n");
      out.write("                <input type=\"checkbox\" id=\"rememberme\" name=\"rememberme\" value=\"true\"/>\n");
      out.write("\n");
      out.write("                <input type=\"submit\" name=\"signIn\" value=\"");
      out.print(res.getString("UILoginForm.label.Signin"));
      out.write("\"/>               \n");
      out.write("                ");
 
                  if (uri != null) { 
                    uri = EntityEncoder.FULL.encode(uri);
                
      out.write("\n");
      out.write("                <input type=\"hidden\" name=\"initialURI\" value=\"");
      out.print(uri);
      out.write("\"/>\n");
      out.write("                ");

                  }
                
      out.write("\n");
      out.write("            </fieldset>\n");
      out.write("          ");
 if(registry.isOAuthEnabled()) { 
      out.write("\n");
      out.write("          <script type=\"text/javascript\">\n");
      out.write("              function goSocialLoginUrl(url) {\n");
      out.write("                  if(document.getElementById('rememberme').checked) {\n");
      out.write("                      url += '&_rememberme=true';\n");
      out.write("                  }\n");
      out.write("                  window.location = url;\n");
      out.write("                  return false;\n");
      out.write("              }\n");
      out.write("          </script>\n");
      out.write("          <div id=\"social-pane\">\n");
      out.write("          <div class=\"SignInDelimiter\">\n");
      out.write("            <span>");
      out.print(res.getString("UILoginForm.label.mobile.login.oauth.Delimiter"));
      out.write("</span>\n");
      out.write("          </div>\n");
      out.write("          <div id=\"social-login\">\n");
      out.write("            ");
 for (OAuthProviderType oauthProvType : registry.getEnabledOAuthProviders()) { 
      out.write("\n");
      out.write("            <a href=\"javascript:void(0)\" onclick=\"goSocialLoginUrl('");
      out.print( oauthProvType.getInitOAuthURL(contextPath, uri) );
      out.write("')\" id=\"login-");
      out.print( oauthProvType.getKey() );
      out.write("\" class=\"login-button\">\n");
      out.write("              <div>");
      out.print( oauthProvType.getFriendlyName() );
      out.write("</div>\n");
      out.write("            </a>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("          </div>\n");
      out.write("          </div>\n");
      out.write("          ");
 } 
      out.write("\n");
      out.write("        </form>\n");
      out.write("        <div id=\"footer\">\n");
      out.write("            <p>\n");
      out.write("                ");
      out.print(res.getString("UILoginForm.label.mobile.copyright.Intro"));
      out.write("\n");
      out.write("                <a href=\"http://www.redhat.com/\">");
      out.print(res.getString("UILoginForm.label.mobile.copyright.RH"));
      out.write("</a>\n");
      out.write("                ");
      out.print(res.getString("UILoginForm.label.mobile.copyright.And"));
      out.write("\n");
      out.write("                <a href=\"http://www.exoplatform.com\">");
      out.print(res.getString("UILoginForm.label.mobile.copyright.Exo"));
      out.write("</a>\n");
      out.write("            </p>\n");
      out.write("        </div>\n");
      out.write("    </body>     \n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
