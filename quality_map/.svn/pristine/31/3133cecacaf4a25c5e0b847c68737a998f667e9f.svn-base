package com.qualitymap.service.impl;

import java.text.DecimalFormat;
import java.text.Format;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import com.qualitymap.dao.ServicequalityGroupidWebbrowsingDao;
import com.qualitymap.service.ServicequalityGroupidWebbrowsingService;
import com.qualitymap.utils.UtilDate;

public class ServicequalityGroupidWebbrowsingServiceImpl implements ServicequalityGroupidWebbrowsingService{

	@Resource
	ServicequalityGroupidWebbrowsingDao groupidWebbrowsingDao;
	static Format fm = new DecimalFormat("#.##");

	

	/**
	 * 获取页面打开成功趋势
	 */
	@Override
	public String getPageSuccessData(String groupid) {
		// TODO Auto-generated method stub
		JSONObject dataJSON = new JSONObject();
		JSONArray avgArray = new JSONArray();
		JSONArray monthArray = new JSONArray();
		if (!"".equals(groupid)) {

			List<Map<String, Object>> queryList = groupidWebbrowsingDao.getPageSuccessData(groupid);

			for (Iterator iterator = queryList.iterator(); iterator.hasNext();) {
				Map<String, Object> map = (Map<String, Object>) iterator.next();
				double page_success_rate =  Double.parseDouble(map.get("page_success_rate").toString());
				String month =  map.get("month").toString();
				avgArray.add(fm.format(page_success_rate));
				monthArray.add(month);
			}
		}

		dataJSON.put("lable", monthArray);
		dataJSON.put("data", avgArray);
		
		return dataJSON.toString();
	}

	/**
	 * 获取页面元素打开成功率排名
	 */
	@Override
	public String getPageSuccessOrder(String month, String groupid) {

		JSONObject dataJSON = new JSONObject();

		JSONArray dataArray = new JSONArray();

		String prmonth = UtilDate.getPreviousMonth(month);
		if (!"".equals(groupid)) {
			List<Map<String, Object>> monList = groupidWebbrowsingDao.getPageSuccessOrder(month, prmonth, groupid);

			List<Map<String, Object>> mapList = new ArrayList<Map<String, Object>>();

			double previousNum = 0;
			double toNum = 0;
			String percent = "";

			for (Iterator iterator = monList.iterator(); iterator.hasNext();) {
				Map<String, Object> map = (Map<String, Object>) iterator.next();
				Map datamap = new HashMap();

				String province = (String) map.get("groupname");
				
				String pagesuccess =  map.get("page_success_rate").toString();
				String pre_pagesuccess = map.get("pre_page_success_rate").toString() ;
				
				if(!"".equals(pagesuccess)){
					toNum = Double.valueOf(pagesuccess);
				}
				
				if(!"".equals(pre_pagesuccess)){
					previousNum = Double.valueOf(pre_pagesuccess);
				}

				if (previousNum != 0) {
					double difValue = toNum - previousNum;
					percent = fm.format(difValue / previousNum * 100);
				} else {
					percent = "N/A";
				}

				datamap.put("province", province);
				datamap.put("thisdata", fm.format(toNum));
				datamap.put("predata", fm.format(previousNum));
				datamap.put("percent", percent);

				mapList.add(datamap);
			}

			dataArray = JSONArray.fromObject(mapList);
		}

		dataJSON.put("data", dataArray);

		return dataJSON.toString();
	}

	
	
	@Override
	public String getAvgPageSuccessRate(String yearMonth, String groupid) {
		String lastMonth = UtilDate.getPreviousMonth(yearMonth);

		JSONObject avgJson = new JSONObject();
		double monthAvg = 0;
		double preAvg = 0;
		if (!"".equals(groupid)) {

			List<Map<String, Object>> avgDelayList = groupidWebbrowsingDao.getAvgPageSuccessRate(yearMonth, lastMonth, groupid);

			for (Iterator iterator = avgDelayList.iterator(); iterator.hasNext();) {
				Map<String, Object> map = (Map<String, Object>) iterator.next();

				if (yearMonth.equals(map.get("month"))) {
					monthAvg = Double.parseDouble(map.get("avg_page_success_rate").toString());
				} else {
					preAvg = Double.parseDouble(map.get("avg_page_success_rate").toString());
				}
			}
		}
		avgJson.put("thismonth", fm.format(monthAvg));
		avgJson.put("lastmonth", fm.format(preAvg));

		return avgJson.toString();
	}

	@Override
	public String getPageStandardRate(String yearMonth, String groupid) {
		String lastMonth = UtilDate.getPreviousMonth(yearMonth);

		JSONObject avgJson = new JSONObject();
		double monthAvg = 0;
		double preAvg = 0;

		if (!"".equals(groupid)) {

			List<Map<String, Object>> avgDelayList = groupidWebbrowsingDao.getPageStandardRate(yearMonth, lastMonth, groupid);

			for (Iterator iterator = avgDelayList.iterator(); iterator.hasNext();) {
				Map<String, Object> map = (Map<String, Object>) iterator.next();

				if (yearMonth.equals(map.get("month"))) {
					monthAvg = Double.parseDouble(map.get("page_standard_rate").toString());
				} else {
					preAvg = Double.parseDouble(map.get("page_standard_rate").toString());
				}
			}
		}
		avgJson.put("thismonth", fm.format(monthAvg));
		avgJson.put("lastmonth", fm.format(preAvg));

		return avgJson.toString();
	}
	/**
	 * 90%用户页面时延
	 */
	@Override
	public String getTop90PageDelay(String yearMonth, String groupid) {
		String lastMonth = UtilDate.getPreviousMonth(yearMonth);

		JSONObject avgJson = new JSONObject();
		double monthAvg = 0;
		double preAvg = 0;
		if (!"".equals(groupid)) {
			List<Map<String, Object>> avgDelayList = groupidWebbrowsingDao.getTop90PageDelay(yearMonth, lastMonth, groupid);

			for (Iterator iterator = avgDelayList.iterator(); iterator.hasNext();) {
				Map<String, Object> map = (Map<String, Object>) iterator.next();

				if (yearMonth.equals(map.get("month"))) {
					monthAvg = Double.parseDouble(map.get("top90_page_delay").toString());
				} else {
					preAvg = Double.parseDouble(map.get("top90_page_delay").toString());
				}
			}
		}
		avgJson.put("thismonth", fm.format(monthAvg));
		avgJson.put("lastmonth", fm.format(preAvg));

		return avgJson.toString();
	}
	/**
	 * 90%用户页面元素打开成功率
	 */
	@Override
	public String getTop90PageSuccessRate(String yearMonth, String groupid) {
		String lastMonth = UtilDate.getPreviousMonth(yearMonth);

		JSONObject avgJson = new JSONObject();
		double monthAvg = 0;
		double preAvg = 0;

		if (!"".equals(groupid)) {

			List<Map<String, Object>> avgDelayList = groupidWebbrowsingDao.getTop90PageSuccessRate(yearMonth, lastMonth, groupid);

			for (Iterator iterator = avgDelayList.iterator(); iterator.hasNext();) {
				Map<String, Object> map = (Map<String, Object>) iterator.next();

				if (yearMonth.equals(map.get("month"))) {
					monthAvg = Double.parseDouble(map.get("top90_page_success_rate").toString());
				} else {
					preAvg = Double.parseDouble(map.get("top90_page_success_rate").toString());
				}
			}
		}
		avgJson.put("thismonth", fm.format(monthAvg));
		avgJson.put("lastmonth", fm.format(preAvg));

		return avgJson.toString();
	}
}
