package com.qualitymap.dao.impl;

import java.util.List;
import java.util.Map;

import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.transform.Transformers;

import com.qualitymap.dao.ServicequalityGroupidWebbrowsingDao;

/**
 * 
 * @author kongxiangchun
 * 
 */
public class ServicequalityGroupidWebbrowsingDaoImpl implements ServicequalityGroupidWebbrowsingDao {

	private SessionFactory sessionFactory;

	
	
	public void setSessionFactory(SessionFactory sessionFactory) {
		this.sessionFactory = sessionFactory;
	}

	public Session getSession() {
		return sessionFactory.getCurrentSession();
	}
	
	
	/**
	 * 获取本省的结果数据在全国的排名
	 */
	@Override
	public List<Map<String, Object>> getBestResult(String month,String broadType) {
		String sql = "select min(abs(page_avg_delay)) best_delay,min(abs(page_success_rate)) best_rate  from servicequality_groupid_webbrowsing  where month= '"+month+"' and broadband_type = '"+broadType+"' and page_avg_delay>0 and page_success_rate>0 ";
		SQLQuery query = this.getSession().createSQLQuery(sql);  
		List<Map<String, Object>> queryList =query.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}
	
	/**
	 * 获取本省的结果数据在全国的排名
	 */
	@Override
	public String getDelayResultOrder(String month, String groupid,String broadType) {
		String sql = "select count(id) avg_delay_order from servicequality_groupid_webbrowsing where month= '"+month+"' and broadband_type = '"+broadType+"' and abs(page_avg_delay) <= (select abs(page_avg_delay) from servicequality_groupid_webbrowsing where  month= '"+month+"' and groupid = '"+groupid+"' and broadband_type = '"+broadType+"' )";
		SQLQuery query = this.getSession().createSQLQuery(sql);  
		String delay_order = query.uniqueResult().toString(); 
		return delay_order;
	}
	
	@Override
	public String getSuccessRateResultOrder(String month, String groupid,String broadType) {
		String sql = "select count(id) rate_order from servicequality_groupid_webbrowsing  where month= '"+month+"' and broadband_type = '"+broadType+"' and abs(page_success_rate) <= (select abs(page_success_rate) from servicequality_groupid_webbrowsing where  month= '"+month+"' and groupid = '"+groupid+"' and broadband_type = '"+broadType+"' )";
		SQLQuery query = this.getSession().createSQLQuery(sql);  
		String rate_order = query.uniqueResult().toString(); 
		return rate_order;
	}
	
	/**
	 * 获取本省的结果数据
	 */
	@Override
	public List<Map<String, Object>> getProvinceResult(String month, String groupid,String broadType) {
		String sql = "select page_avg_delay delay_data,page_success_rate rate_data from servicequality_groupid_webbrowsing where  month= '"+month+"' and groupid = '"+groupid+"' and broadband_type = '"+broadType+"' ";
		SQLQuery query = this.getSession().createSQLQuery(sql);  

		List<Map<String, Object>> queryList =query.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}
	
	
	
	/**
	 * 获取质量分析 即 上下月中数据的增减情况
	 */
	@Override
	public List<Map<String, Object>> getWebbrowsingServiceQualityCompare(String groupid, String month,String permonth, String broadband_type) {
		String sql = "select  IFNULL(round((page_avg_delay - (select page_avg_delay from servicequality_groupid_webbrowsing where month='"+permonth+"' and groupid='"+groupid+"' and broadband_type='"+broadband_type+"')),2),'N/A') page_avg_delay, IFNULL(round((page_success_rate - (select page_success_rate from servicequality_groupid_webbrowsing where month='"+permonth+"' and groupid='"+groupid+"' and broadband_type='"+broadband_type+"')),2),'N/A') page_success_rate from  servicequality_groupid_webbrowsing where  month='"+month+"' and groupid='"+groupid+"' and broadband_type='"+broadband_type+"'";
		List<Map<String, Object>> queryList = this.getSession().createSQLQuery(sql).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}

	/**
	 * 获取上下月的平均时延
	 */
	@Override
	public List<Map<String, Object>> getAvgDelay(String yearMonth, String lastMonth, String groupid) {
		String sql = " SELECT sum(page_test_times * page_avg_delay) /SUM(page_test_times) avg_delay,`month` " + " FROM servicequality_groupid_webbrowsing WHERE" + " `month` in (" + yearMonth + "," + lastMonth
				+ ") AND groupid IN (" + groupid + ") GROUP BY `month` order by month";

		List<Map<String, Object>> queryList = this.getSession().createSQLQuery(sql).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}

	
	
	/**
	 * 获取页面元素打开成功率趋势数据
	 */
	@Override
	public List<Map<String, Object>> getPageSuccessData(String groupid) {
		String sql = " SELECT sum(page_success_rate*page_test_times)/sum(page_test_times) page_success_rate ,month FROM servicequality_groupid_webbrowsing WHERE `groupid` in ("+groupid+")  GROUP BY month order by month";

		List<Map<String, Object>> queryList = this.getSession().createSQLQuery(sql).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}

	/**
	 * 获取页面元素打开成功率的排名
	 */
	@Override
	public List<Map<String, Object>> getPageSuccessOrder(String thismonth, String premonth, String groupid) {
		String sql = " SELECT ifnull(sum(page_success_rate*page_test_times)/sum(page_test_times),0) page_success_rate ," +
				"ifnull((SELECT ifnull(sum(page_success_rate * page_test_times) / sum(page_test_times),0) pre_page_success_rate FROM servicequality_groupid_webbrowsing b WHERE `month` = '"+premonth+"' and b.groupid = a.groupid GROUP BY groupid ),0) pre_page_success_rate " +
				",groupname FROM servicequality_groupid_webbrowsing a WHERE `groupid` in ("+groupid+") and month = '"+thismonth+"' GROUP BY groupid order by page_success_rate desc ";
		
		List<Map<String, Object>> queryList = this.getSession().createSQLQuery(sql).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}
	
	/**
	 * 获取上下月平均页面元素打开成功率
	 */
	@Override
	public List<Map<String, Object>> getAvgPageSuccessRate(String yearMonth, String lastMonth, String groupid) {
		String sql = " SELECT sum(page_test_times * page_success_rate) /SUM(page_test_times) avg_page_success_rate,`month` " + " FROM servicequality_groupid_webbrowsing WHERE" + " `month` in (" + yearMonth + ","
				+ lastMonth + ") AND groupid IN (" + groupid + ") GROUP BY `month` order by month ";

		List<Map<String, Object>> queryList = this.getSession().createSQLQuery(sql).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}

	/**
	 * 获取上下月页面元素打开达标率
	 */
	@Override
	public List<Map<String, Object>> getPageStandardRate(String yearMonth, String lastMonth, String groupid) {
		String sql = " SELECT sum(page_test_times * page_standard_rate) /SUM(page_test_times) page_standard_rate,`month` " + " FROM servicequality_groupid_webbrowsing WHERE" + " `month` in (" + yearMonth + "," + lastMonth
				+ ") AND groupid IN (" + groupid + ") GROUP BY `month` order by month";

		List<Map<String, Object>> queryList = this.getSession().createSQLQuery(sql).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}

	/**
	 * 获取上下月95%用户页面时延
	 */
	@Override
	public List<Map<String, Object>> getTop90PageDelay(String yearMonth, String lastMonth, String groupid) {
		String sql = " SELECT sum(page_test_times * top95_page_delay) /SUM(page_test_times) top90_page_delay,`month` " + " FROM servicequality_groupid_webbrowsing WHERE" + " `month` in (" + yearMonth + ","
				+ lastMonth + ") AND groupid IN (" + groupid + ") GROUP BY `month` order by month ";

		List<Map<String, Object>> queryList = this.getSession().createSQLQuery(sql).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}
	
	/**
	 * 获取上下月90%用户页面元素打开成功率
	 */
	@Override
	public List<Map<String, Object>> getTop90PageSuccessRate(String yearMonth, String lastMonth, String groupid) {
		String sql = " SELECT sum(page_test_times * top95_page_success_rate) /SUM(page_test_times) top90_page_success_rate,`month` " + " FROM servicequality_groupid_webbrowsing WHERE" + " `month` in (" + yearMonth + "," + lastMonth
				+ ") AND groupid IN (" + groupid + ") GROUP BY `month` order by month";

		List<Map<String, Object>> queryList = this.getSession().createSQLQuery(sql).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
		return queryList;
	}
	
}
